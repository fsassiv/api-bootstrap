version: '3.9'

services:
  api-gateway:
    build:
      context: .
      dockerfile: apps/api-gateway/Dockerfile.dev # ðŸ‘‰ Swap with `Dockerfile` for prod
    container_name: api-gateway
    ports:
      - '3100:3100'
    env_file:
      - .env
    depends_on:
      # - rabbitmq
      - redis
      - auth-service
    networks:
      - api-bootstrap-network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  auth-service:
    build:
      context: .
      dockerfile: apps/auth-service/Dockerfile.dev # ðŸ‘‰ Swap with `Dockerfile` for prod
    container_name: auth-service
    ports:
      - '3101:3101'
    env_file:
      - .env
    depends_on:
      # - rabbitmq
      - mongodb
    networks:
      - api-bootstrap-network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  redis:
    image: redis:7.2-alpine
    container_name: redis
    ports:
      - '6379:6379'
    networks:
      - api-bootstrap-network
    volumes:
      - redis-data:/data

  # rabbitmq:
  #   image: rabbitmq:3-management
  #   container_name: rabbitmq
  #   ports:
  #     - '5672:5672'
  #     - '15672:15672'
  #   networks:
  #     - api-bootstrap-network
  #   env_file:
  #     - .env
  #   volumes:
  #     - rabbitmq-data:/var/lib/rabbitmq
  #   environment:
  #     RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
  #     RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}

  mongodb:
    image: mongo:7.0
    container_name: mongodb
    ports:
      - '27017:27017'
    networks:
      - api-bootstrap-network
    env_file:
      - .env
    volumes:
      - mongodb-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}

  # postgres:
  #   image: postgres:16
  #   container_name: postgres
  #   ports:
  #     - '5432:5432'
  #   networks:
  #     - api-bootstrap-network
  #   env_file:
  #     - .env
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_DB: ${POSTGRES_DB}

networks:
  api-bootstrap-network:
    driver: bridge

volumes:
  mongodb-data:
  # postgres-data:
  redis-data:
  # rabbitmq-data:
